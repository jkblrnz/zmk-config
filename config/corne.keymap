/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&nice_view_spi {
  cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {

        behaviors {
                hm: balanced-homerow-mods {
                     compatible = "zmk,behavior-hold-tap";
                     label = "HOMEROW_MODS";
                     #binding-cells = <2>;
                     tapping-term-ms = <200>;
                     quick-tap-ms = <0>;
                     flavor = "tap-preferred";
                     bindings = <&kp>, <&kp>;
                };

        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//   |  -  |  U  |  ,    |  C       | Z   |   | Q   | G         |  Y    |  H  |  B  |
//   |  O  |  I  |  A    |  N       | M   |   | D   | T         |  S    |  L  |  R  |
//   |  /  |  ;  |  .    |  W       | V   |   | J   | P         |  F    |  K  |  X  |
//               |  RET  |  RSE/E   | RPT |   | RPT | LWR/SPC   |  BKSP |
                        bindings = <
   &none &kp MINUS &kp U       &kp COMMA  &kp C       &kp Z /**/ &kp Q &kp G       &kp Y      &kp H       &kp B &none
   &none &kp O     &hm LCTRL I &hm LALT A &hm LSHFT N &kp M /**/ &kp D &hm RSHFT T &hm RALT S &hm RCTRL L &kp R &none
   &none &kp FSLH  &kp SEMI    &kp DOT    &kp W       &kp V /**/ &kp J &kp P       &kp F      &kp K       &kp X &none
         &kp RET   &lt 2 E     &kp &key_repeat              /**/ &kp &key_repeat   &lt 1 SPC  &kp BSPC
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | ! | @ | # |  $  |  %  |   | ^   |  &   |  *  |  (   |  )  |
// | ` | [ | ' |  ]  |  \  |   | LFT |  DWN |  UP |  RGT | TAB |
// | ~ | { | " |  }  |  |  |   | =   |  _   |     |      |     |
//         | - | GUI |  +  |   |     |      |     |
                        bindings = <
   &none     &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT /**/ &kp CARET &kp AMPS  &kp KP_MULTIPLE  &kp LPAR  &kp RPAR &none
   &none     &kp GRAVE &kp LBKT &kp SQT  &kp RBKT &kp BSLH  /**/ &kp LEFT  &kp DOWN  &kp UP           &kp RIGHT &kp TAB  &none
   &none     &kp TILDE &kp LBRC &kp APOS &kp RBRC &kp PIPE  /**/ &kp EQUAL &kp UNDER &none            &none     &none    &none
   &kp MINUS &kp GUI   &kp PLUS                             /**/ &none     &none     &none
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2  |  F3  |  F4  | F5    |   |  *  |  7  |  8  |  9  |  + |
// |  F6  |  F7  |  F8  |  F9  | F10   |   |  /  |  4  |  5  |  6  |  - |
// |  F11 |  F12 |  BT1 |  BT2 | BTCLR |   |  0  |  1  |  2  |  3  |  ^ |
//               |      |      |       |   |     |     |     |
                        bindings = <
   &none     &kp F1  &kp F2  &kp F3       &kp F4       &kp F5     /**/ &kp STAR &kp 7 &kp 8 &kp 9 &kp PLUS  &none
   &none     &kp F6  &kp F7  &kp F8       &kp F9       &kp F10    /**/ &kp FSLH &kp 4 &kp 5 &kp 6 &kp MINUS &none
   &none     &kp F11 &kp F12 &kp BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR /**/ &kp 0    &kp 1 &kp 2 &kp 3 &kp RET   &none
   &none     &none   &none                                        /**/ &trans   &trans    &trans
                        >;
                };
        };
};
